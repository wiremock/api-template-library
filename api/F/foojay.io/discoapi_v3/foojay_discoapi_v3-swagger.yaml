openapi: 3.0.1
info:
  title: foojay DiscoAPI
  description: The foojay (Friends of OpenJDK) discovery api allows users to discover
    and query for Java packages (jre/jdk) from different distributions.
  contact:
    name: foojay main page
    url: https://foojay.io
  version: "3.0"
paths:
  /disco/v3.0:
    get:
      summary: Returns a list of endpoints of Disco API v3.
      description: Returns a list of endpoints of Disco API v3.0
      operationId: V3
      responses:
        "200":
          description: V3 200 response
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/distributions:
    get:
      summary: Returns a list of all supported distributions
      description: Returns a list of all supported distributions
      operationId: getDistributionsV3
      parameters:
      - name: include_versions
        in: query
        description: If true the response will contain the list of supported versions
          of this distribution (default is true)
        schema:
          type: boolean
          nullable: true
      - name: include_synonyms
        in: query
        description: If true the response will contain the list of synonyms used for
          this distribution (default is true)
        schema:
          type: boolean
          nullable: true
      - name: discovery_scope_id
        in: query
        description: Defines the scope that will be part of the response (e.g. build_of_openjdk)
        schema:
          type: array
          nullable: true
          items:
            type: string
      responses:
        "200":
          description: A list of all supported distributions in json format
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/distributions/versions/{version}:
    get:
      summary: Returns a list of all distributions that support the given java version
      description: Returns a list of all distributions that support the given java
        version
      operationId: getDistributionsForGivenVersionV3
      parameters:
      - name: version
        in: path
        description: "The version number to check the distributions for e.g. 1.8.0_265,\
          \ 13.0.5.1, 15 etc."
        required: true
        schema:
          type: string
          nullable: true
      - name: discovery_scope_id
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: match
        in: query
        schema:
          type: string
          nullable: true
      - name: include_versions
        in: query
        description: If true the response will contain the list of supported versions
          of this distribution (default is true)
        schema:
          type: boolean
          nullable: true
      - name: include_synonyms
        in: query
        description: If true the response will contain the list of synonyms used for
          this distribution (default is false)
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: A list of all distributions that support the given version
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/distributions/{distro_name}:
    get:
      summary: Returns detailled information about a given distribution
      description: Returns detailled information about a given distribution
      operationId: getDistributionV3
      parameters:
      - name: distro_name
        in: path
        description: ""
        required: true
        schema:
          type: string
          nullable: true
      - name: latest_per_update
        in: query
        description: "If true the response will only contain the latest version of\
          \ each update (e.g. in case of 17.0.1+1, 17.0.1+2 and 17.0.1+3 -\\> only\
          \ 17.0.1+3 will be returned) (default is false)"
        schema:
          type: boolean
          nullable: true
      - name: discovery_scope_id
        in: query
        description: "The scope of the package query (e.g. public, build_of_openjdk,\
          \ build_of_graalvm, directly_downloadable, not_directly_downloadable, free_to_use_in_production,\
          \ license_needed_for_production)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: match
        in: query
        description: "Defines how the discovery_socpe_ids should be matched (any will\
          \ return all packages that contain at least one of the discovery_scope_ids\
          \ (default), all will only return packages that contain all given discovery_scope_ids)"
        schema:
          type: string
          nullable: true
      - name: include_versions
        in: query
        description: If true the response will contain the list of supported versions
          of this distribution (default is true)
        schema:
          type: boolean
          nullable: true
      - name: include_synonyms
        in: query
        description: If true the response will contain the list of synonyms used for
          this distribution (default is false)
        schema:
          type: boolean
          nullable: true
      - name: include_ea
        in: query
        description: "If true the response will contain ea and ga versions, otherwise\
          \ it will only contain ga versions (default is true)"
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: detailled info about a given distribution
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/ids/{pkg_id}/redirect:
    get:
      summary: Redirects to either the direct download link or the download site of
        the requested package defined by it's id
      description: Redirects to either the direct download link or the download site
        of the requested package defined by it's id
      operationId: getPackageRedirectV3
      parameters:
      - name: pkg_id
        in: path
        description: The pkg_id with which one can get the download info.
        required: true
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Redirects to either the direct download link or the download
            site of the requested pacakge defined by it's id
          content:
            application/octet-stream:
              schema:
                type: object
  /disco/v3.0/major_versions:
    get:
      summary: Return a list of major versions defined by the given parameters
      description: Return a list of major versions defined by the given parameters
      operationId: getAllMajorVersionsV3
      parameters:
      - name: ea
        in: query
        description: "Defines if versions in major version that are early access will\
          \ be shown (optional true/false, default false)"
        schema:
          type: boolean
          nullable: true
      - name: ga
        in: query
        description: "Defines if versions in major version that are general availability\
          \ will be shown (optional true/false, default true)"
        schema:
          type: boolean
          nullable: true
      - name: maintained
        in: query
        description: "Defines that only major versions will be shown that are actively\
          \ be maintained. (optional true/false, default false)"
        schema:
          type: boolean
          nullable: true
      - name: include_build
        in: query
        description: Includes build numbers if true (optional)
        schema:
          type: boolean
          nullable: true
      - name: discovery_scope_id
        in: query
        description: "The scope of the package query (e.g. public, build_of_openjdk,\
          \ build_of_graalvm, directly_downloadable, not_directly_downloadable, free_to_use_in_production,\
          \ license_needed_for_production)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: match
        in: query
        description: "Defines how the discovery_socpe_ids should be matched (any will\
          \ return all packages that contain at least one of the discovery_scope_ids\
          \ (default), all will only return packages that contain all given discovery_scope_ids)"
        schema:
          type: string
          nullable: true
      - name: include_versions
        in: query
        description: "Shows all versions related to the given major version (e.g.\
          \ major version 17 -\\> versions 17, 17.0.1, 17.0.2) (default is true)"
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: A list of major versions defined by the given parameters
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/major_versions/{major_version}/ea:
    get:
      summary: Returns the specified major version including early access builds
      description: Returns the specified major version including early access builds
      operationId: getSpecificMajorVersionIncludingEaV3
      parameters:
      - name: major_version
        in: path
        description: A major version between 6 and the latest currently available
          (December 2020 -\> 17)
        required: true
        schema:
          type: integer
          format: int32
      - name: include_build
        in: query
        description: Include build numbers if true
        schema:
          type: boolean
          nullable: true
      - name: include_versions
        in: query
        description: "Shows all versions related to the given major version (e.g.\
          \ major version 17 -\\> versions 17, 17.0.1, 17.0.2) (default is true)"
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: the specified major version (if valid) including early access
            builds
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/major_versions/{major_version}/ga:
    get:
      summary: Returns the specified major version excluding early access builds
      description: Returns the specified major version excluding early access builds
      operationId: getSpecificMajorVersionV3
      parameters:
      - name: major_version
        in: path
        description: A major version between 6 and the latest currently available
          (December 2020 -\> 17)
        required: true
        schema:
          type: integer
          format: int32
      - name: include_build
        in: query
        description: Include build numbers if true
        schema:
          type: boolean
          nullable: true
      - name: include_versions
        in: query
        description: "Shows all versions related to the given major version (e.g.\
          \ major version 17 -\\> versions 17, 17.0.1, 17.0.2) (default is true)"
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: the specified major version (if valid) without early access
            builds
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/major_versions/{query}:
    get:
      summary: Returns information about the requested major version
      description: Returns information about the requested major version
      operationId: getMajorVersionV3
      parameters:
      - name: query
        in: path
        description: "The query to get info about a major version (latest_ea, latest_ga,\
          \ latest_sts, latest_mts, latest_lts, useful)"
        required: true
        schema:
          type: string
          nullable: true
      - name: include_build
        in: query
        description: Include build number if true
        schema:
          type: boolean
          nullable: true
      - name: include_versions
        in: query
        description: "Shows all versions related to the given major version (e.g.\
          \ major version 17 -\\> versions 17, 17.0.1, 17.0.2) (default is true)"
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: Information about the requested major version in json format
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/packages:
    get:
      summary: Returns a list of packages defined by the given parameters The version
        parameter not only supports different formats for version numbers (e.
      description: "Returns a list of packages defined by the given parameters The\
        \ version parameter not only supports different formats for version numbers\
        \ (e.g. 11.9.0.1, 1.8.0_262, 15, 16-ea) but also ranges (e.g. 15.0.1..\\<16).\
        \ The ranges are defined as follows: VersionNumber1...VersionNumber2 =\\>\
        \ includes VersionNumber1 and VersionNumber2 VersionNumber1.. includes VersionNumber1\
        \ and excludes VersionNumber2 VersionNumber1\\>..VersionNUmber2 =\\> excludes\
        \ VersionNumber1 and includes VersionNumber2 VersionNumber1\\>. excludes VersionNumber1\
        \ and VersionNumber2"
      operationId: getPackagesV3
      parameters:
      - name: version
        in: query
        description: "The version number (e.g. 11.9.0.1, 1.8.0_262, 15, 16-ea). Ranges\
          \ are also supported e.g. 15.0.1..\\<16"
        schema:
          type: string
          nullable: true
      - name: version_by_definition
        in: query
        description: "The version will be calculated from the given parameter (latest,\
          \ latest_sts, latest_mts, latest_lts)"
        schema:
          type: string
          nullable: true
      - name: jdk_version
        in: query
        description: The feature version of the used jdk (e.g. 11) which is used to
          select builds of GraalVM based on different jdks
        schema:
          type: integer
          format: int32
          nullable: true
      - name: distro
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: distribution
        in: query
        description: "The name of the distribution (aoj, aoj_openj9, bisheng, corretto,\
          \ dragonwell, graalvm_ce8, graalvm_ce11, graalvm_ce16, graalvm_ce17, graalvm_ce19,\
          \ graalvm_ce20, graalvm_community, graalvm, jetbrains, kona, liberica, liberica_native,\
          \ mandrel, microsoft, ojdk_build, openlogic, oracle, oracle_open_jdk, redhat,\
          \ sap_machine, semeru, semeru_certified, temurin, trava, zulu, zulu_prime)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: architecture
        in: query
        description: "The architecture (aarch32, aarch64, amd64, arm, arm32, arm64,\
          \ mips, ppc, ppc64el, ppc64le, ppc64, riscv64, s390, s390x, sparc, sparcv9,\
          \ x64, x86-64, x86, i386, i486, i586, i686, x86-32)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: archive_type
        in: query
        description: "The archive type (apk, cab, deb, dmg, exe, msi, pkg, rpm, tar,\
          \ tar.gz, tgz, zip)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: package_type
        in: query
        description: "The pkg type (jdk, jre)"
        schema:
          type: string
          nullable: true
      - name: operating_system
        in: query
        description: "The operating system (aix, alpine_linux, linux, linux_musl,\
          \ macos, qnx, solaris, windows)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: libc_type
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: lib_c_type
        in: query
        description: "The type of libc that is used (glibc, libc, musl, c_std_lib)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: release_status
        in: query
        description: "The release status e.g. early access or general availability\
          \ (ea, ga)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: term_of_support
        in: query
        description: "The support term e.g. short term stable, mid term stable, long\
          \ term stable (sts, mts, lts)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: bitness
        in: query
        description: "The bitness (32, 64)"
        schema:
          type: integer
          format: int32
          nullable: true
      - name: fpu
        in: query
        description: Indicator for arm hard_float and soft_float packages. For all
          other packages this parameter has the value unknown
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: javafx_bundled
        in: query
        description: True if the packages should contain JavaFX bundled
        schema:
          type: boolean
          nullable: true
      - name: with_javafx_if_available
        in: query
        description: If true and javafx_bundled not set it will return the package
          that comes with JavaFX bundled
        schema:
          type: boolean
          nullable: true
      - name: directly_downloadable
        in: query
        description: True if the package is directly downloadable via the api (packages
          that need the user to click through pages or are commercial will be marked
          with false)
        schema:
          type: boolean
          nullable: true
      - name: latest
        in: query
        description: "The definition of the latest version e.g. the latest version\
          \ overall or the latest version per distribution (overall, per_distro, per_version,\
          \ available, all_of_version)"
        schema:
          type: string
          nullable: true
      - name: feature
        in: query
        description: "Features that are supported by some early access versions of\
          \ Oracle OpenJDK (loom, panama, lanai, valhalla)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: signature_available
        in: query
        description: True for packages that provide a signature uri
        schema:
          type: boolean
          nullable: true
      - name: free_to_use_in_production
        in: query
        description: True if the package is allowed to be used not only for development
          and testing but also for production
        schema:
          type: boolean
          nullable: true
      - name: tck_tested
        in: query
        description: "True if the package is tck tested, otherwise it has the value\
          \ unknown"
        schema:
          type: string
          nullable: true
      - name: aqavit_certified
        in: query
        description: "True if the package is aqavit certified, otherwise it has the\
          \ value unknown"
        schema:
          type: string
          nullable: true
      - name: discovery_scope_id
        in: query
        description: "The scope of the package query (e.g. public, build_of_openjdk,\
          \ build_of_graalvm, directly_downloadable, not_directly_downloadable, free_to_use_in_production,\
          \ license_needed_for_production, signature_available, signature_not_available)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: match
        in: query
        description: "Defines how the discovery_socpe_ids should be matched (any will\
          \ return all packages that contain at least one of the discovery_scope_ids\
          \ (default), all will only return packages that contain all given discovery_scope_ids)"
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: The result contains an array of packages that have been found
            according the given parameters in json format
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/packages/all:
    get:
      summary: Returns all packages defined the downloadable and include_ea parameter
      description: Returns all packages defined the downloadable and include_ea parameter
      operationId: getAllPackagesV3
      parameters:
      - name: downloadable
        in: query
        description: When set to true it will return all packages that are directly
          downloadable
        schema:
          type: boolean
          nullable: true
      - name: include_ea
        in: query
        description: When set to true it will return all packages including early
          access builds
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: All packages from the cache in json format
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/packages/all_builds_of_graalvm:
    get:
      summary: Returns all packages that are builds of GraalVM
      description: Returns all packages that are builds of GraalVM
      operationId: getAllPackagesGraalVMV3
      parameters:
      - name: downloadable
        in: query
        description: When set to true it will return all packages build of graalvm
          that are directly downloadable
        schema:
          type: boolean
          nullable: true
      - name: include_ea
        in: query
        description: When set to true it will return all packages build of graalvm
          including early access builds
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: All packages build of graalvm from the cache in json format
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/packages/all_builds_of_openjdk:
    get:
      summary: Returns all packages that are builds of OpenJDK
      description: Returns all packages that are builds of OpenJDK
      operationId: getAllPackagesOpenJDKV3
      parameters:
      - name: downloadable
        in: query
        description: When set to true it will return all packages that are builds
          of openjdk that are directly downloadable
        schema:
          type: boolean
          nullable: true
      - name: include_ea
        in: query
        description: When set to true it will return all packages that are builds
          of openjdk including early access builds
        schema:
          type: boolean
          nullable: true
      - name: minimized
        in: query
        description: When set to true it will return all packages that are builds
          of openjdk in a more compact format and Linux using musl will be returned
          as alpine_linux
        schema:
          type: boolean
          nullable: true
      responses:
        "200":
          description: All packages build of openjdk from the cache in json format
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/packages/jdks:
    get:
      summary: Returns a list of packages that are of package_type JDK defined by
        the given parameters.
      description: "Returns a list of packages that are of package_type JDK defined\
        \ by the given parameters. The version parameter not only supports different\
        \ formats for version numbers (e.g. 11.9.0.1, 1.8.0_262, 15, 16-ea) but also\
        \ ranges (e.g. 15.0.1..\\<16). The ranges are defined as follows: VersionNumber1...VersionNumber2\
        \ =\\> includes VersionNumber1 and VersionNumber2 VersionNumber1.. includes\
        \ VersionNumber1 and excludes VersionNumber2 VersionNumber1\\>..VersionNUmber2\
        \ =\\> excludes VersionNumber1 and includes VersionNumber2 VersionNumber1\\\
        >. excludes VersionNumber1 and VersionNumber2"
      operationId: getJDKPackagesV3
      parameters:
      - name: version
        in: query
        description: "The version number (e.g. 11.9.0.1, 1.8.0_262, 15, 16-ea). Ranges\
          \ are also supported e.g. 15.0.1..\\<16"
        schema:
          type: string
          nullable: true
      - name: jdk_version
        in: query
        description: The feature version of the used JDK (e.g. 11) which can differ
          in builds of GraalVM even with the same version number
        schema:
          type: integer
          format: int32
          nullable: true
      - name: distro
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: distribution
        in: query
        description: "The name of the distribution (aoj, aoj_openj9, corretto, dragonwell,\
          \ graalvm_ce8, graalvm_ce11, graalvm_ce16, graalvm_ce17, graalvm_ce19, graalvm_ce20,\
          \ graalvm_community, liberica, liberica_native, mandrel, microsoft, ojdk_build,\
          \ openlogic, oracle, oracle_open_jdk, redhat, sap_machine, semeru, temurin,\
          \ trava, zulu)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: architecture
        in: query
        description: "The architecture (aarch32, aarch64, amd64, arm, arm32, arm64,\
          \ mips, ppc, ppc64el, ppc64le, ppc64, riscv64, s390, s390x, sparc, sparcv9,\
          \ x64, x86-64, x86, i386, i486, i586, i686, x86-32)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: fpu
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: archive_type
        in: query
        description: "The archive type (apk, cab, deb, dmg, exe, msi, pkg, rpm, tar,\
          \ tar.gz, zip)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: operating_system
        in: query
        description: "The operating system (aix, alpine_linux, linux, linux_musl,\
          \ macos, qnx, solaris, windows)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: libc_type
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: lib_c_type
        in: query
        description: "The type of libc that is used (glibc, libc, musl, c_std_lib)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: release_status
        in: query
        description: "The release status e.g. early access or general availability\
          \ (ea, ga)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: javafx_bundled
        in: query
        description: True if the packages should contain JavaFX bundled
        schema:
          type: boolean
          nullable: true
      - name: with_javafx_if_available
        in: query
        description: If true and javafx_bundled not set it will return the package
          that comes with JavaFX bundled
        schema:
          type: boolean
          nullable: true
      - name: latest
        in: query
        description: "The definition of the latest version e.g. the latest version\
          \ overall or the latest version per distribution (overall, per_distro, per_version,\
          \ available, all_of_version)"
        schema:
          type: string
          nullable: true
      - name: signature_available
        in: query
        description: True for packages that provide a signature uri
        schema:
          type: boolean
          nullable: true
      - name: free_to_use_in_production
        in: query
        description: True for packages that are not only allowed to be used in development
          and testing but also in production
        schema:
          type: boolean
          nullable: true
      - name: tck_tested
        in: query
        description: "True if the package is tck tested, otherwise it has the value\
          \ unknown"
        schema:
          type: string
          nullable: true
      - name: aqavit_certified
        in: query
        description: "True if the package is aqavit certified, otherwise it has the\
          \ value unknown"
        schema:
          type: string
          nullable: true
      - name: match
        in: query
        description: Defines if all or any scope should be matched
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: The result contains an array of packages that have been found
            according the given parameters in json format
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/packages/jres:
    get:
      summary: Returns a list of packages that are of package_type JRE defined by
        the given parameters.
      description: "Returns a list of packages that are of package_type JRE defined\
        \ by the given parameters. The version parameter not only supports different\
        \ formats for version numbers (e.g. 11.9.0.1, 1.8.0_262, 15, 16-ea) but also\
        \ ranges (e.g. 15.0.1..\\<16). The ranges are defined as follows: VersionNumber1...VersionNumber2\
        \ =\\> includes VersionNumber1 and VersionNumber2 VersionNumber1.. includes\
        \ VersionNumber1 and excludes VersionNumber2 VersionNumber1\\>..VersionNUmber2\
        \ =\\> excludes VersionNumber1 and includes VersionNumber2 VersionNumber1\\\
        >. excludes VersionNumber1 and VersionNumber2"
      operationId: getJREPackagesV3
      parameters:
      - name: version
        in: query
        description: "The version number (e.g. 11.9.0.1, 1.8.0_262, 15, 16-ea). Ranges\
          \ are also supported e.g. 15.0.1..\\<16"
        schema:
          type: string
          nullable: true
      - name: jdk_version
        in: query
        description: The feature version of the used JDK (e.g. 11) which can differ
          in builds of GraalVM even with the same version number
        schema:
          type: integer
          format: int32
          nullable: true
      - name: distro
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: distribution
        in: query
        description: "The name of the distribution (aoj, aoj_openj9, corretto, dragonwell,\
          \ graalvm_ce8, graalvm_ce11, graalvm_ce16, graalvm_ce17, graalvm_ce19, graalvm_ce20,\
          \ graalvm_community, liberica, liberica_native, mandrel, microsoft, ojdk_build,\
          \ openlogic, oracle, oracle_open_jdk, redhat, sap_machine, semeru, temurin,\
          \ trava, zulu)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: architecture
        in: query
        description: "The architecture (aarch32, aarch64, amd64, arm, arm32, arm64,\
          \ mips, ppc, ppc64el, ppc64le, ppc64, riscv64, s390, s390x, sparc, sparcv9,\
          \ x64, x86-64, x86, i386, i486, i586, i686, x86-32)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: fpu
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: archive_type
        in: query
        description: "The archive type (apk, cab, deb, dmg, exe, msi, pkg, rpm, tar,\
          \ tar.gz, zip)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: operating_system
        in: query
        description: "The operating system (aix, alpine_linux, linux, linux_musl,\
          \ macos, qnx, solaris, windows)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: libc_type
        in: query
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: lib_c_type
        in: query
        description: "The type of libc that is used (glibc, libc, musl, c_std_lib)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: release_status
        in: query
        description: "The release status e.g. early access or general availability\
          \ (ea, ga)"
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: javafx_bundled
        in: query
        description: True if the packages should contain JavaFX bundled
        schema:
          type: boolean
          nullable: true
      - name: with_javafx_if_available
        in: query
        description: If true and javafx_bundled not set it will return the package
          that comes with JavaFX bundled
        schema:
          type: boolean
          nullable: true
      - name: latest
        in: query
        description: "The definition of the latest version e.g. the latest version\
          \ overall or the latest version per distribution (overall, per_distro, per_version,\
          \ available, all_of_version)"
        schema:
          type: string
          nullable: true
      - name: signature_available
        in: query
        description: True for packages that provide a signature uri
        schema:
          type: boolean
          nullable: true
      - name: tck_tested
        in: query
        description: "True if the package is tck tested, otherwise it has the value\
          \ unknown"
        schema:
          type: string
          nullable: true
      - name: aqavit_certified
        in: query
        description: "True if the package is aqavit certified, otherwise it has the\
          \ value unknown"
        schema:
          type: string
          nullable: true
      - name: match
        in: query
        description: Defines if all or any scope should be matched
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: The result contains an array of packages that have been found
            according the given parameters in json format
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/packages/{id}:
    get:
      summary: Returns information about a package defined by the given package id
      description: Returns information about a package defined by the given package
        id
      operationId: getPackageV3
      parameters:
      - name: id
        in: path
        description: The package id to get either the direct download uri for the
          file or the download site uri where you can download the file from
        required: true
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Information about the requested package id in json format
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/parameters:
    get:
      summary: Returns a list of parameters and their possible values which are used
        in the Disco API
      description: Returns a list of parameters and their possible values which are
        used in the Disco API
      operationId: getParametersV3
      responses:
        "200":
          description: getParametersV3 200 response
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/remaining_days/release:
    get:
      summary: Returns the remaining days to next feature release (e.
      description: Returns the remaining days to next feature release (e.g. 21 GA)
        based on the current release cadence
      operationId: getRemainingDaysToNextRelease
      responses:
        "200":
          description: the remaining days to next feature release (e.g. 21 GA) based
            on the current release cadence
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/remaining_days/update:
    get:
      summary: Returns the remaining days to next update (e.
      description: Returns the remaining days to next update (e.g. 17.0.9) based on
        the current release cadence
      operationId: getRemainingDaysToNextUpdate
      responses:
        "200":
          description: the remaining days to next update (e.g. 17.0.9) based on the
            current release cadence
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/supported_architectures:
    get:
      summary: Returns the supported architectures with their bitness etc.
      description: Returns the supported architectures with their bitness etc.
      operationId: getSupportedArchitectures
      responses:
        "200":
          description: the supported architectures with their bitness etc.
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/supported_archive_types:
    get:
      summary: Returns the supported archive types
      description: Returns the supported archive types
      operationId: getSupportedArchiveTypes
      responses:
        "200":
          description: the supported archive types
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/supported_features:
    get:
      summary: Returns the supported features
      description: Returns the supported features
      operationId: getSupportedFeatures
      responses:
        "200":
          description: the supported features
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/supported_fpus:
    get:
      summary: Returns the supported floating point types
      description: Returns the supported floating point types
      operationId: getSupportedFpus
      responses:
        "200":
          description: the supported floating point types
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/supported_latest_parameters:
    get:
      summary: Returns the supported latest parameters
      description: Returns the supported latest parameters
      operationId: getSupportedLatestParameters
      responses:
        "200":
          description: the supported latest parameters
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/supported_lib_c_types:
    get:
      summary: Returns the supported libc types
      description: Returns the supported libc types
      operationId: getSupportedLibCTypes
      responses:
        "200":
          description: the supported libc types
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/supported_operating_systems:
    get:
      summary: Returns the supported operating systems with their libc type
      description: Returns the supported operating systems with their libc type
      operationId: getSupportedOperatingSystems
      responses:
        "200":
          description: the supported operating systems with their libc type
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/supported_package_types:
    get:
      summary: Returns the supported package types
      description: Returns the supported package types
      operationId: getSupportedPackageTypes
      responses:
        "200":
          description: the supported package types
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/supported_release_status:
    get:
      summary: Returns the supported release status
      description: Returns the supported release status
      operationId: getSupportedReleaseStatus
      responses:
        "200":
          description: the supported release status
          content:
            application/json:
              schema:
                type: object
  /disco/v3.0/supported_terms_of_support:
    get:
      summary: Returns the supported terms of support
      description: Returns the supported terms of support
      operationId: getSupportedTermsOfSupport
      responses:
        "200":
          description: the supported terms of support
          content:
            application/json:
              schema:
                type: object
